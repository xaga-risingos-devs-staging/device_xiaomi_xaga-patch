From 18ca58f636eae97c1db06fb9e0d8598cb24a17f8 Mon Sep 17 00:00:00 2001
From: Hecheng Yu <kde-yyds@qq.com>
Date: Sun, 4 May 2025 18:59:37 +0800
Subject: Add back some missing features (#3)

---
 .../launcher3/QuickstepTransitionManager.java | 88 ++++++++++++++++++-
 .../uioverrides/states/AllAppsState.java      |  9 +-
 .../uioverrides/states/OverviewState.java     |  6 +-
 .../uioverrides/states/QuickSwitchState.java  |  6 +-
 .../quickstep/fallback/RecentsState.java      |  6 +-
 res/color-v31/overview_scrim.xml              |  2 +-
 res/color-v31/overview_scrim_dark.xml         |  2 +-
 res/values/cr_strings.xml                     |  4 +
 res/xml/launcher_app_drawer_preferences.xml   |  9 ++
 res/xml/launcher_misc_preferences.xml         |  9 ++
 res/xml/launcher_recents_preferences.xml      |  9 ++
 src/com/android/launcher3/Utilities.java      | 19 +++-
 .../android/launcher3/states/HintState.java   |  3 +-
 .../uioverrides/states/AllAppsState.java      |  7 +-
 .../uioverrides/states/OverviewState.java     |  6 +-
 15 files changed, 169 insertions(+), 16 deletions(-)

diff --git a/quickstep/src/com/android/launcher3/QuickstepTransitionManager.java b/quickstep/src/com/android/launcher3/QuickstepTransitionManager.java
index 560be83..9721c5e 100644
--- a/quickstep/src/com/android/launcher3/QuickstepTransitionManager.java
+++ b/quickstep/src/com/android/launcher3/QuickstepTransitionManager.java
@@ -86,6 +86,7 @@ import android.graphics.Point;
 import android.graphics.PointF;
 import android.graphics.Rect;
 import android.graphics.RectF;
+import android.graphics.RenderEffect;
 import android.graphics.drawable.Drawable;
 import android.os.Handler;
 import android.os.IBinder;
@@ -281,7 +282,7 @@ public class QuickstepTransitionManager implements OnDeviceProfileChangeListener
     // Will never be larger than MAX_NUM_TASKS
     private LinkedHashMap<Integer, Pair<Integer, Integer>> mTaskStartParams;
     private boolean mAreAnimationsEnabled = true;
-
+    private boolean mBlurBackgroundAtAppLaunch = true;
     private final Interpolator mOpeningXInterpolator;
     private final Interpolator mOpeningInterpolator;
 
@@ -945,11 +946,13 @@ public class QuickstepTransitionManager implements OnDeviceProfileChangeListener
         appAnimator.addUpdateListener(listener);
         // Since we added a start delay, call update here to init the FloatingIconView properly.
         listener.onUpdate(0, true /* initOnly */);
-
+        mBlurBackgroundAtAppLaunch = Utilities.blurBackgroundAtAppLaunch(mLauncher.getApplicationContext());
         // If app targets are translucent, do not animate the background as it causes a visible
         // flicker when it resets itself at the end of its animation.
         if (appTargetsAreTranslucent || !launcherClosing) {
             animatorSet.play(appAnimator);
+        } else if (mBlurBackgroundAtAppLaunch) {
+            animatorSet.playTogether(appAnimator, getBackgroundBlurAnimator());
         } else {
             animatorSet.playTogether(appAnimator, getBackgroundAnimator());
         }
@@ -1092,11 +1095,13 @@ public class QuickstepTransitionManager implements OnDeviceProfileChangeListener
                 surfaceApplier.scheduleApply(transaction);
             }
         });
-
+        mBlurBackgroundAtAppLaunch = Utilities.blurBackgroundAtAppLaunch(mLauncher.getApplicationContext());
         // If app targets are translucent, do not animate the background as it causes a visible
         // flicker when it resets itself at the end of its animation.
         if (appTargetsAreTranslucent || !launcherClosing) {
             animatorSet.play(appAnimator);
+        } else if (mBlurBackgroundAtAppLaunch) {
+            animatorSet.playTogether(appAnimator, getBackgroundBlurAnimator());
         } else {
             animatorSet.playTogether(appAnimator, getBackgroundAnimator());
         }
@@ -1150,7 +1155,84 @@ public class QuickstepTransitionManager implements OnDeviceProfileChangeListener
 
         return backgroundRadiusAnim;
     }
+    private ObjectAnimator getBackgroundBlurAnimator() {
+        boolean allowBlurringLauncher = mLauncher.getStateManager().getState() != OVERVIEW
+                && BlurUtils.supportsBlursOnWindows();
+
+        LaunchDepthController depthController = new LaunchDepthController(mLauncher);
+        ObjectAnimator backgroundRadiusAnim = ObjectAnimator.ofFloat(depthController.stateDepth,
+                        MULTI_PROPERTY_VALUE, BACKGROUND_APP.getDepth(mLauncher))
+                .setDuration(APP_LAUNCH_DURATION);
+
+        if (allowBlurringLauncher) {
+            View rootView = mLauncher.getDragLayer();
+
+            // Create a composite SurfaceControl layer for everything behind the app animation
+            ViewRootImpl viewRootImpl = rootView.getViewRootImpl();
+            SurfaceControl parentSurface = viewRootImpl != null ? viewRootImpl.getSurfaceControl() : null;
+
+            if (parentSurface != null) {
+                SurfaceControl blurLayer = new SurfaceControl.Builder()
+                        .setName("Blur Layer")
+                        .setParent(parentSurface)
+                        .setOpaque(false)
+                        .setEffectLayer()
+                        .build();
+
+                SurfaceControl.Transaction transaction = new SurfaceControl.Transaction();
+
+                // Create an animator for the blur effect
+                backgroundRadiusAnim.addUpdateListener(animation -> {
+
+                    if (mLauncher.getStateManager().getState() == LauncherState.ALL_APPS) {
+                        return;
+                    }
+                    float maxBlurRadius = 45.0f;
+                    float animatedValue = (float) animation.getAnimatedValue();
+                    float blurRadius = Math.min(maxBlurRadius, animatedValue * maxBlurRadius); // Scale blur with animation progress
+
+                    // Dynamically update blur radius
+                    if (blurLayer != null && blurLayer.isValid()) {
+                        transaction.setBackgroundBlurRadius(blurLayer, (int) blurRadius);
+                        transaction.setAlpha(blurLayer, 1f);
+                        transaction.show(blurLayer);
+                        transaction.apply();
+                    }
+                });
+
+                backgroundRadiusAnim.setInterpolator(mOpeningInterpolator);
+
+                // Cleanup on animation end or cancel
+                backgroundRadiusAnim.addListener(new AnimatorListenerAdapter() {
+                    @Override
+                    public void onAnimationEnd(Animator animation) {
+                        cleanupBlurLayer(blurLayer, transaction);
+                    }
+
+                    @Override
+                    public void onAnimationCancel(Animator animation) {
+                        cleanupBlurLayer(blurLayer, transaction);
+                    }
 
+                    private void cleanupBlurLayer(SurfaceControl blurLayer, SurfaceControl.Transaction transaction) {
+                        if (blurLayer != null && blurLayer.isValid()) {
+                            transaction.remove(blurLayer).apply();
+                            blurLayer.release(); // Release the SurfaceControl to avoid leaks
+                        }
+                    }
+                });
+            }
+        }
+
+        backgroundRadiusAnim.addListener(
+                AnimatorListeners.forEndCallback(() -> {
+                    depthController.stateDepth
+                            .setValue(mLauncher.getDepthController().stateDepth.getValue());
+                    depthController.dispose();
+                }));
+
+        return backgroundRadiusAnim;
+    }
     /**
      * Registers remote animations used when closing apps to home screen.
      */
diff --git a/quickstep/src/com/android/launcher3/uioverrides/states/AllAppsState.java b/quickstep/src/com/android/launcher3/uioverrides/states/AllAppsState.java
index d387794..86232be 100644
--- a/quickstep/src/com/android/launcher3/uioverrides/states/AllAppsState.java
+++ b/quickstep/src/com/android/launcher3/uioverrides/states/AllAppsState.java
@@ -21,11 +21,14 @@ import static com.android.launcher3.logging.StatsLogManager.LAUNCHER_STATE_ALLAP
 
 import android.content.Context;
 
+import androidx.core.graphics.ColorUtils;
+
 import com.android.internal.jank.Cuj;
 import com.android.launcher3.DeviceProfile;
 import com.android.launcher3.Launcher;
 import com.android.launcher3.LauncherState;
 import com.android.launcher3.R;
+import com.android.launcher3.Utilities;
 import com.android.launcher3.util.Themes;
 import com.android.launcher3.views.ActivityContext;
 import com.android.quickstep.util.BaseDepthController;
@@ -202,8 +205,8 @@ public class AllAppsState extends LauncherState {
 
     @Override
     public int getWorkspaceScrimColor(Launcher launcher) {
-        return launcher.getDeviceProfile().shouldShowAllAppsOnSheet()
-                ? launcher.getResources().getColor(R.color.widgets_picker_scrim)
-                : Themes.getAttrColor(launcher, R.attr.allAppsScrimColor);
+        return ColorUtils.setAlphaComponent(
+                Themes.getAttrColor(launcher, R.attr.allAppsScrimColor),
+                Utilities.getAllAppsOpacity(launcher) * 255 / 100);
     }
 }
diff --git a/quickstep/src/com/android/launcher3/uioverrides/states/OverviewState.java b/quickstep/src/com/android/launcher3/uioverrides/states/OverviewState.java
index 8148485..ee23598 100644
--- a/quickstep/src/com/android/launcher3/uioverrides/states/OverviewState.java
+++ b/quickstep/src/com/android/launcher3/uioverrides/states/OverviewState.java
@@ -24,11 +24,14 @@ import android.content.Context;
 import android.graphics.Rect;
 import android.os.SystemProperties;
 
+import androidx.core.graphics.ColorUtils;
+
 import com.android.launcher3.DeviceProfile;
 import com.android.launcher3.Launcher;
 import com.android.launcher3.LauncherState;
 import com.android.launcher3.LauncherPrefs;
 import com.android.launcher3.R;
+import com.android.launcher3.Utilities;
 import com.android.launcher3.util.DisplayController;
 import com.android.launcher3.util.Themes;
 import com.android.quickstep.util.BaseDepthController;
@@ -166,7 +169,8 @@ public class OverviewState extends LauncherState {
 
     @Override
     public int getWorkspaceScrimColor(Launcher launcher) {
-        return Themes.getAttrColor(launcher, R.attr.overviewScrimColor);
+        return ColorUtils.setAlphaComponent(
+                Themes.getAttrColor(launcher, R.attr.overviewScrimColor), Utilities.getRecentsOpacity(launcher) * 255 / 100);
     }
 
     @Override
diff --git a/quickstep/src/com/android/launcher3/uioverrides/states/QuickSwitchState.java b/quickstep/src/com/android/launcher3/uioverrides/states/QuickSwitchState.java
index dfad409..2b0161d 100644
--- a/quickstep/src/com/android/launcher3/uioverrides/states/QuickSwitchState.java
+++ b/quickstep/src/com/android/launcher3/uioverrides/states/QuickSwitchState.java
@@ -19,9 +19,12 @@ import static com.android.launcher3.logging.StatsLogManager.LAUNCHER_STATE_BACKG
 
 import android.graphics.Color;
 
+import androidx.core.graphics.ColorUtils;
+
 import com.android.launcher3.DeviceProfile;
 import com.android.launcher3.Launcher;
 import com.android.launcher3.R;
+import com.android.launcher3.Utilities;
 import com.android.launcher3.util.Themes;
 
 /**
@@ -53,7 +56,8 @@ public class QuickSwitchState extends BackgroundAppState {
         if (dp.isTaskbarPresentInApps) {
             return launcher.getColor(R.color.taskbar_background);
         }
-        return Themes.getAttrColor(launcher, R.attr.overviewScrimColor);
+        return ColorUtils.setAlphaComponent(
+                Themes.getAttrColor(launcher, R.attr.overviewScrimColor), Utilities.getRecentsOpacity(launcher) * 255 / 100);
     }
 
     @Override
diff --git a/quickstep/src/com/android/quickstep/fallback/RecentsState.java b/quickstep/src/com/android/quickstep/fallback/RecentsState.java
index 79eae51..dbaffb8 100644
--- a/quickstep/src/com/android/quickstep/fallback/RecentsState.java
+++ b/quickstep/src/com/android/quickstep/fallback/RecentsState.java
@@ -23,8 +23,11 @@ import static com.android.launcher3.uioverrides.states.OverviewModalTaskState.ge
 import android.content.Context;
 import android.graphics.Color;
 
+import androidx.core.graphics.ColorUtils;
+
 import com.android.launcher3.DeviceProfile;
 import com.android.launcher3.R;
+import com.android.launcher3.Utilities;
 import com.android.launcher3.statemanager.BaseState;
 import com.android.launcher3.util.Themes;
 import com.android.quickstep.views.RecentsViewContainer;
@@ -148,7 +151,8 @@ public class RecentsState implements BaseState<RecentsState> {
      */
     public int getScrimColor(Context context) {
         return hasFlag(FLAG_SCRIM)
-                ? Themes.getAttrColor(context, R.attr.overviewScrimColor)
+                ?  ColorUtils.setAlphaComponent(Themes.getAttrColor(context, R.attr.overviewScrimColor),
+                Utilities.getRecentsOpacity(context) * 255 / 100)
                 : Color.TRANSPARENT;
     }
 
diff --git a/res/color-v31/overview_scrim.xml b/res/color-v31/overview_scrim.xml
index 212518f..b2beaf0 100644
--- a/res/color-v31/overview_scrim.xml
+++ b/res/color-v31/overview_scrim.xml
@@ -14,5 +14,5 @@
      limitations under the License.
 -->
 <selector xmlns:android="http://schemas.android.com/apk/res/android">
-  <item android:color="@android:color/system_neutral2_200" />
+  <item android:color="@android:color/system_neutral2_200" android:alpha="0.4" />
 </selector>
diff --git a/res/color-v31/overview_scrim_dark.xml b/res/color-v31/overview_scrim_dark.xml
index 2ab8ecd..73b2f3b 100644
--- a/res/color-v31/overview_scrim_dark.xml
+++ b/res/color-v31/overview_scrim_dark.xml
@@ -14,5 +14,5 @@
      limitations under the License.
 -->
 <selector xmlns:android="http://schemas.android.com/apk/res/android">
-  <item android:color="@android:color/system_neutral1_500" android:lStar="35" />
+  <item android:color="@android:color/system_neutral1_500" android:lStar="35" android:alpha="0.4" />
 </selector>
diff --git a/res/values/cr_strings.xml b/res/values/cr_strings.xml
index 9e60bdf..81e53cb 100644
--- a/res/values/cr_strings.xml
+++ b/res/values/cr_strings.xml
@@ -467,4 +467,8 @@
     <string name="widget_data_title">Data widget</string>
     <string name="widget_bt_title">Bluetooth widget</string>
     <string name="photo_widget_onboarding">Click to add new photo</string>
+
+    <!-- Background blur at app launch-->
+    <string name="pref_blur_background_at_app_launch_title">Background blur at app launch</string>
+    <string name="pref_blur_background_at_app_launch_summary">Blur the background at app launch</string>
 </resources>
diff --git a/res/xml/launcher_app_drawer_preferences.xml b/res/xml/launcher_app_drawer_preferences.xml
index 173bb24..ca2fb4f 100644
--- a/res/xml/launcher_app_drawer_preferences.xml
+++ b/res/xml/launcher_app_drawer_preferences.xml
@@ -61,6 +61,15 @@
         launcher:iconSpaceReserved="false"
         android:layout="@layout/settings_layout_middle_no_summary" />
 
+    <com.android.launcher3.settings.preferences.CustomSeekBarPreference
+        android:key="pref_app_drawer_opacity"
+        android:title="@string/background_opacity_title"
+        android:persistent="true"
+        android:max="100"
+        android:min="0"
+        settings:units="%"
+        android:defaultValue="80" />
+
     <com.android.launcher3.settings.preferences.CustomSeekBarPreference
         android:key="pref_row_height"
         android:title="@string/row_height_title"
diff --git a/res/xml/launcher_misc_preferences.xml b/res/xml/launcher_misc_preferences.xml
index 1f0646a..7069230 100644
--- a/res/xml/launcher_misc_preferences.xml
+++ b/res/xml/launcher_misc_preferences.xml
@@ -44,6 +44,15 @@
         <intent android:action="android.settings.ACTION_CONTENT_SUGGESTIONS_SETTINGS" />
     </androidx.preference.PreferenceScreen>
 
+    <SwitchPreferenceCompat
+        android:key="pref_blur_background_at_app_launch"
+        android:title="@string/pref_blur_background_at_app_launch_title"
+        android:summary="@string/pref_blur_background_at_app_launch_summary"
+        android:defaultValue="true"
+        android:persistent="true"
+        launcher:iconSpaceReserved="false"
+        android:layout="@layout/settings_layout_middle" />
+
     <com.android.launcher3.settings.preference.RestartPreference
         android:key="pref_restart"
         android:title="@string/pref_restart_title"
diff --git a/res/xml/launcher_recents_preferences.xml b/res/xml/launcher_recents_preferences.xml
index 3e328c8..77509b3 100644
--- a/res/xml/launcher_recents_preferences.xml
+++ b/res/xml/launcher_recents_preferences.xml
@@ -22,6 +22,15 @@
     <PreferenceCategory
         android:title="@string/general_category_title">
 
+        <com.android.launcher3.settings.preferences.CustomSeekBarPreference
+            android:key="pref_recents_opacity"
+            android:title="@string/background_opacity_title"
+            android:persistent="true"
+            android:max="100"
+            android:min="0"
+            settings:units="%"
+            android:defaultValue="40" />
+
         <SwitchPreferenceCompat
             android:key="pref_recents_meminfo"
             android:title="@string/recents_meminfo_title"
diff --git a/src/com/android/launcher3/Utilities.java b/src/com/android/launcher3/Utilities.java
index 124f14e..f47f364 100644
--- a/src/com/android/launcher3/Utilities.java
+++ b/src/com/android/launcher3/Utilities.java
@@ -194,7 +194,9 @@ public final class Utilities {
     public static final String KEY_SHOW_QUICKSPACE_WEATHER = "pref_quickspace_weather";
     public static final String KEY_SHOW_QUICKSPACE_WEATHER_CITY = "pref_quickspace_weather_city";
     public static final String KEY_SHOW_QUICKSPACE_WEATHER_TEXT = "pref_quickspace_weather_text";
-
+    public static final String KEY_RECENTS_OPACITY = "pref_recents_opacity";
+    public static final String KEY_APP_DRAWER_OPACITY = "pref_app_drawer_opacity";
+    public static final String KEY_BLUR_BACKGROUND_AT_APP_LAUNCH = "pref_blur_background_at_app_launch";
     /**
      * Returns true if theme is dark.
      */
@@ -1204,4 +1206,19 @@ public final class Utilities {
         SharedPreferences prefs = LauncherPrefs.getPrefs(context.getApplicationContext());
         return prefs.getBoolean(KEY_SHOW_QUICKSPACE_WEATHER_TEXT, true);
     }
+
+    public static int getRecentsOpacity(Context context) {
+        SharedPreferences prefs = LauncherPrefs.getPrefs(context.getApplicationContext());
+        return prefs.getInt(KEY_RECENTS_OPACITY, 40);
+    }
+
+    public static int getAllAppsOpacity(Context context) {
+        SharedPreferences prefs = LauncherPrefs.getPrefs(context.getApplicationContext());
+        return prefs.getInt(KEY_APP_DRAWER_OPACITY, 80);
+    }
+
+    public static boolean blurBackgroundAtAppLaunch(Context context) {
+        SharedPreferences prefs = LauncherPrefs.getPrefs(context.getApplicationContext());
+        return prefs.getBoolean(KEY_BLUR_BACKGROUND_AT_APP_LAUNCH, true);
+    }
 }
diff --git a/src/com/android/launcher3/states/HintState.java b/src/com/android/launcher3/states/HintState.java
index bf2fb30..246673e 100644
--- a/src/com/android/launcher3/states/HintState.java
+++ b/src/com/android/launcher3/states/HintState.java
@@ -25,6 +25,7 @@ import androidx.core.graphics.ColorUtils;
 import com.android.launcher3.Launcher;
 import com.android.launcher3.LauncherState;
 import com.android.launcher3.R;
+import com.android.launcher3.Utilities;
 import com.android.launcher3.util.Themes;
 
 /**
@@ -62,7 +63,7 @@ public class HintState extends LauncherState {
     @Override
     public int getWorkspaceScrimColor(Launcher launcher) {
         return ColorUtils.setAlphaComponent(
-                Themes.getAttrColor(launcher, R.attr.overviewScrimColor), 100);
+                Themes.getAttrColor(launcher, R.attr.overviewScrimColor), Utilities.getRecentsOpacity(launcher) * 255 / 100);
     }
 
     @Override
diff --git a/src_no_quickstep/com/android/launcher3/uioverrides/states/AllAppsState.java b/src_no_quickstep/com/android/launcher3/uioverrides/states/AllAppsState.java
index 9865516..ebba292 100644
--- a/src_no_quickstep/com/android/launcher3/uioverrides/states/AllAppsState.java
+++ b/src_no_quickstep/com/android/launcher3/uioverrides/states/AllAppsState.java
@@ -20,9 +20,12 @@ import static com.android.launcher3.logging.StatsLogManager.LAUNCHER_STATE_ALLAP
 
 import android.content.Context;
 
+import androidx.core.graphics.ColorUtils;
+
 import com.android.launcher3.Launcher;
 import com.android.launcher3.LauncherState;
 import com.android.launcher3.R;
+import com.android.launcher3.Utilities;
 import com.android.launcher3.util.Themes;
 import com.android.launcher3.views.ActivityContext;
 
@@ -102,8 +105,8 @@ public class AllAppsState extends LauncherState {
 
     @Override
     public int getWorkspaceScrimColor(Launcher launcher) {
-        return launcher.getDeviceProfile().isTablet
+        return ColorUtils.setAlphaComponent(launcher.getDeviceProfile().isTablet
                 ? launcher.getResources().getColor(R.color.widgets_picker_scrim)
-                : Themes.getAttrColor(launcher, R.attr.allAppsScrimColor);
+                : Themes.getAttrColor(launcher, R.attr.allAppsScrimColor), Utilities.getAllAppsOpacity(launcher) * 255 / 100);
     }
 }
diff --git a/src_no_quickstep/com/android/launcher3/uioverrides/states/OverviewState.java b/src_no_quickstep/com/android/launcher3/uioverrides/states/OverviewState.java
index 7a228c4..34709df 100644
--- a/src_no_quickstep/com/android/launcher3/uioverrides/states/OverviewState.java
+++ b/src_no_quickstep/com/android/launcher3/uioverrides/states/OverviewState.java
@@ -19,9 +19,12 @@ import static com.android.launcher3.logging.StatsLogManager.LAUNCHER_STATE_OVERV
 
 import android.content.Context;
 
+import androidx.core.graphics.ColorUtils;
+
 import com.android.launcher3.Launcher;
 import com.android.launcher3.LauncherState;
 import com.android.launcher3.R;
+import com.android.launcher3.Utilities;
 import com.android.launcher3.util.Themes;
 
 /**
@@ -62,6 +65,7 @@ public class OverviewState extends LauncherState {
 
     @Override
     public int getWorkspaceScrimColor(Launcher launcher) {
-        return Themes.getAttrColor(launcher, R.attr.overviewScrimColor);
+        return ColorUtils.setAlphaComponent(
+                Themes.getAttrColor(launcher, R.attr.overviewScrimColor), Utilities.getRecentsOpacity(launcher) * 255 / 100);
     }
 }
-- 
2.49.0

